name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build images
        timeout-minutes: 10
        run: docker compose build

      - name: Docker Hub login
        env:
          CRYANDEX_PASSWORD: y0_AgAAAAAZQKOHAATuwQAAAAD4cgz_-p5fJbT3SXWB0_omDHpuIxBw2YQ
        run: echo "$CRYANDEX_PASSWORD" | docker login -u oauth --password-stdin cr.yandex

      - name: Docker Publish
        run: docker compose push

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Prepare Kube config
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
          KUBECONFIG_CA_FILE: '${{ secrets.KUBECONFIG_CA }}'
        run: |
          echo "$KUBECONFIG_FILE" > ./kube.config
          echo "$KUBECONFIG_CA_FILE" > ./ca.pem

#      - name: 'App deploy'
#        env:
#          POSTGRES_PASSWORD: 'test'
#        run: |
#           helm upgrade lab4app k8s/my-app
#          export HELM_OPERATION=install
#          helm --kubeconfig ./kube.config status my-app
#          if [ $? -eq 0 ]
#            then HELM_OPERATION=upgrade
#          fi
#          helm --kubeconfig ./kube.config $HELM_OPERATION my-app ./k8s/my-app

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          # TODO insert your variant
          collection: v1/postman/collection.json
          environment: v1/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - uses: education/autograding@v1
        id: autograder
        continue-on-error: true

      - name: Github auto grader mark
        uses: Romanow/google-sheet-autograder-marker@v1.0
        with:
          google_token: ${{secrets.GOOGLE_API_KEY}}
          sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
          homework_number: 2
          user_column: 'D'
          column_offset: 'F'
          mark: "'+"

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v
